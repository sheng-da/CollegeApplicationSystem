/*Drop Tables*/
DROP FUNCTION IF EXISTS CreateOrUpdateApplicant;
DROP FUNCTION IF EXISTS CreateApplication;
DROP TABLE IF EXISTS EntryTest;
DROP TABLE IF EXISTS TestType;
DROP TABLE IF EXISTS EducationalHistory;
DROP TABLE IF EXISTS EmploymentHistory;
DROP TABLE IF EXISTS Application;
DROP TABLE IF EXISTS Race;
DROP TABLE IF EXISTS RaceType;
DROP TABLE IF EXISTS PersonalInformation;
DROP TABLE IF EXISTS StudentType;
DROP TABLE IF EXISTS College;
DROP TABLE IF EXISTS DegreeofApplication;
DROP TABLE IF EXISTS MajorofApplication;
DROP TABLE IF EXISTS Term;
DROP TABLE IF EXISTS MilitaryBranch;
DROP TABLE IF EXISTS VeteranStatus;
DROP TABLE IF EXISTS State;
DROP TABLE IF EXISTS UserMd5;

/*Create Table*/
CREATE TABLE UserMd5 (
USER_ID INT NOT NULL AUTO_INCREMENT,
USER_NAME VARCHAR(16) NOT NULL,
PASSWORD VARCHAR(32) NOT NULL,
PRIMARY KEY(USER_ID)
)ENGINE=InnoDB;

CREATE TABLE State(
STATE_ID INT NOT NULL AUTO_INCREMENT,
STATE_DESCRIPTION VARCHAR(2) NOT NULL,
PRIMARY KEY(STATE_ID)
)ENGINE=InnoDB;

CREATE TABLE VeteranStatus(
VETERAN_STATUS_ID INT NOT NULL,
VETERAN_STATUS_DESCRIPTION VARCHAR(20) NOT NULL,
PRIMARY KEY(VETERAN_STATUS_ID)
)ENGINE=InnoDB;

CREATE TABLE MilitaryBranch(
MILITARY_BRANCH_ID INT NOT NULL,
MILITARY_BRANCH_DESCRIPTION VARCHAR(15) NOT NULL,
PRIMARY KEY(MILITARY_BRANCH_ID)
)ENGINE=InnoDB;

CREATE TABLE Term(
TERM_ID INT NOT NULL,
TERM_QUARTER VARCHAR(10) NOT NULL,
TERM_YEAR INT(4) NOT NULL,
PRIMARY KEY(TERM_ID),
CONSTRAINT CHK_TERM_QUARTER CHECK (TERM_QUARTER IN ('Summer', 'Fall'))
)ENGINE=InnoDB;

CREATE TABLE MajorofApplication(
MAJOR_OF_APPLICATION_ID INT NOT NULL,
MAJOR_OF_APPLICATION_DESCRIPTION VARCHAR(50) NOT NULL,
PRIMARY KEY(MAJOR_OF_APPLICATION_ID)
)ENGINE=InnoDB;

CREATE TABLE DegreeofApplication(
DEGREE_OF_APPLICATION_ID INT NOT NULL,
DEGREE_OF_APPLICATION_DESCRIPTION VARCHAR(30) NOT NULL,
PRIMARY KEY(DEGREE_OF_APPLICATION_ID)
)ENGINE=InnoDB;

CREATE TABLE College(
COLLEGE_ID INT NOT NULL,
COLLEGE_NAME VARCHAR(40) NOT NULL,
PRIMARY KEY(COLLEGE_ID)
)ENGINE=InnoDB;

CREATE TABLE StudentType(
STUDENT_TYPE_ID INT NOT NULL,
STUDENT_TYPE_DESCRIPTION VARCHAR(30),
PRIMARY KEY(STUDENT_TYPE_ID)
)ENGINE=InnoDB;

CREATE TABLE PersonalInformation(
APPLICANT_ID INT NOT NULL AUTO_INCREMENT,
APPLICANT_USER_ID INT NOT NULL,
APPLICANT_VETERAN_STATUS_ID INT NOT NULL,
APPLICANT_MILITARY_BRANCH_ID INT,
APPLICANT_FNAME VARCHAR(15)NOT NULL,
APPLICANT_LNAME VARCHAR(15) NOT NULL,
APPLICANT_PREFERRED_NAME VARCHAR(15),
APPLICANT_DATE_OF_BIRTH DATE NOT NULL,
APPLICANT_STREET_ADDRESS VARCHAR(15) NOT NULL,
APPLICANT_CITY VARCHAR(15) NOT NULL,
APPLICANT_STATE_ID INT NOT NULL,
APPLICANT_COUNTRY VARCHAR(15) NOT NULL,
APPLICANT_ZIPCODE INT NOT NULL,
APPLICANT_PHONE_NUMBER INT NOT NULL,
APPLICANT_US_CITIZEN ENUM('Yes', 'No'),
APPLICANT_EN_NATIVE ENUM('Yes', 'No'),
APPLICANT_GENDER ENUM('Male', 'Female'),
APPLICANT_HISPANIC_OR_LATINO ENUM('Yes', 'No'),
PRIMARY KEY(APPLICANT_ID),
FOREIGN KEY(APPLICANT_USER_ID) REFERENCES UserMd5(USER_ID),
FOREIGN KEY(APPLICANT_VETERAN_STATUS_ID) REFERENCES VeteranStatus(VETERAN_STATUS_ID),
FOREIGN KEY(APPLICANT_MILITARY_BRANCH_ID) REFERENCES MilitaryBranch(MILITARY_BRANCH_ID),
FOREIGN KEY(APPLICANT_STATE_ID) REFERENCES State(STATE_ID)
)ENGINE=InnoDB;

CREATE TABLE RaceType(
RACE_TYPE_ID INT NOT NULL,
RACE_TYPE_DESCRIPTION VARCHAR(35) NOT NULL,
PRIMARY KEY(RACE_TYPE_ID)
)ENGINE=InnoDB;

CREATE TABLE Race(
APPLICANT_ID INT NOT NULL,
RACE_TYPE_ID INT NOT NULL,
PRIMARY KEY(APPLICANT_ID,RACE_TYPE_ID),
FOREIGN KEY(APPLICANT_ID) REFERENCES PersonalInformation(APPLICANT_ID),
FOREIGN KEY(RACE_TYPE_ID) REFERENCES RaceType(RACE_TYPE_ID)
)ENGINE=InnoDB;

CREATE TABLE Application(
APPLICANT_ID INT NOT NULL,
APPLICATION_ID INT NOT NULL AUTO_INCREMENT,
STUDENT_TYPE_ID INT NOT NULL,
COLLEGE_ID INT NOT NULL,
DEGREE_OF_APPLICATION_ID INT NOT NULL,
MAJOR_OF_APPLICATION_ID INT NOT NULL,
TERM_ID INT NOT NULL,
APPLICATION_FINITIAL_AID ENUM('Yes', 'No'),
APPLICATION_EMPLOYEE_ASSISTANCE ENUM('Yes', 'No'),
APPLICATION_MULTIPLE_PROGRAM ENUM('Yes', 'No'),
APPLICATION_FELONY_MISDEMEANOR ENUM('Yes', 'No'),
APPLICATION_INSTITUTION_IMCOMPLETE ENUM('Yes', 'No'),
PRIMARY KEY(APPLICATION_ID),
FOREIGN KEY(APPLICANT_ID) REFERENCES PersonalInformation(APPLICANT_ID),
FOREIGN KEY(STUDENT_TYPE_ID) REFERENCES StudentType(STUDENT_TYPE_ID),
FOREIGN KEY(COLLEGE_ID) REFERENCES College(COLLEGE_ID),
FOREIGN KEY(DEGREE_OF_APPLICATION_ID) REFERENCES DegreeofApplication(DEGREE_OF_APPLICATION_ID),
FOREIGN KEY(MAJOR_OF_APPLICATION_ID) REFERENCES MajorofApplication(MAJOR_OF_APPLICATION_ID),
FOREIGN KEY(TERM_ID) REFERENCES Term(TERM_ID)
)ENGINE=InnoDB;

CREATE TABLE EmploymentHistory(
APPLICATION_ID INT NOT NULL,
EMPLOYMENT_HISTORY_ID INT NOT NULL,
JOB_TITLE VARCHAR(20) NOT NULL,
ORGANIZATION_NAME VARCHAR(30) NOT NULL,
ORGANIZATION_STREET_ADDRESS VARCHAR(15) NOT NULL,
ORGANIZATION_CITY VARCHAR(15) NOT NULL,
ORGANIZATION_STATE_ID INT NOT NULL,
ORGANIZATION_COUNTRY VARCHAR(15) NOT NULL,
ORGANIZATION_ZIPCODE INT NOT NULL,
ORGANIZATION_PHONE_NUMBER INT NOT NULL,
CURRENTLY_EMPLOYED ENUM('Yes', 'No'),
START_DATE DATE NOT NULL,
END_DATE DATE NOT NULL,
PART_OR_FULL_TIME VARCHAR(10) NOT NULL,
PRIMARY KEY(APPLICATION_ID,EMPLOYMENT_HISTORY_ID),
FOREIGN KEY(APPLICATION_ID) REFERENCES Application(APPLICATION_ID),
FOREIGN KEY(ORGANIZATION_STATE_ID) REFERENCES State(STATE_ID)
)ENGINE=InnoDB;

CREATE TABLE EducationalHistory(
APPLICATION_ID INT NOT NULL,
EDUCATIONAL_HISTORY_ID INT NOT NULL,
DEGREE_OF_EDUCATIONAL_HISTORY VARCHAR(20) NOT NULL,
MAJOR_OF_EDUCATIONAL_HISTORY VARCHAR(20) NOT NULL,
INSTITUTION VARCHAR(30) NOT NULL,
START_DATE DATE NOT NULL,
END_DATE DATE NOT NULL,
DEGREE_RECEIVE_DATE DATE NOT NULL,
PRIMARY KEY(APPLICATION_ID,EDUCATIONAL_HISTORY_ID),
FOREIGN KEY(APPLICATION_ID) REFERENCES Application(APPLICATION_ID)
)ENGINE=InnoDB;

CREATE TABLE TestType(
TEST_TYPE_ID INT NOT NULL,
TEST_TYPE_DESCRIPTION VARCHAR(15) NOT NULL,
PRIMARY KEY(TEST_TYPE_ID)
)ENGINE=InnoDB;

CREATE TABLE EntryTest(
APPLICATION_ID INT NOT NULL,
TEST_TYPE_ID INT NOT NULL,
TEST_SCORE INT NOT NULL,
TEST_DATE DATE NOT NULL,
PRIMARY KEY(APPLICATION_ID,TEST_TYPE_ID),
FOREIGN KEY(APPLICATION_ID) REFERENCES Application(APPLICATION_ID),
FOREIGN KEY(TEST_TYPE_ID) REFERENCES TestType(TEST_TYPE_ID)
)ENGINE=InnoDB;

/*Insert Values*/
INSERT INTO StudentType VALUES (0,'Graduate');
INSERT INTO StudentType VALUES (1,'Graduate Non-Matriculated');
INSERT INTO StudentType VALUES (2,'Graduate Readmission');

INSERT INTO College VALUES (0,'College of Science and Engineering');
INSERT INTO College VALUES (1,'Albers School of Business');
INSERT INTO College VALUES (2,'College of Arts and Sciences');
INSERT INTO College VALUES (3,'College of Education');
INSERT INTO College VALUES (4,'College of Nursing');
INSERT INTO College VALUES (5,'School of Theology and Ministry');

INSERT INTO DegreeofApplication VALUES (0,'Certificates');
INSERT INTO DegreeofApplication VALUES (1,'Master''s');

INSERT INTO MajorofApplication VALUES (0,'Certificate in Computer Science Fundamentals');
INSERT INTO MajorofApplication VALUES (1,'Certificate in Software Architecture and Design');
INSERT INTO MajorofApplication VALUES (2,'Certificate in Software Project Management');

INSERT INTO VeteranStatus VALUES (0,'Not a veteran');
INSERT INTO VeteranStatus VALUES (1,'Currently serving');
INSERT INTO VeteranStatus VALUES (2,'Previously served');
INSERT INTO VeteranStatus VALUES (3,'Current dependent');

INSERT INTO MilitaryBranch VALUES (0,'N/A');
INSERT INTO MilitaryBranch VALUES (1,'Army');
INSERT INTO MilitaryBranch VALUES (2,'Marine Corp');
INSERT INTO MilitaryBranch VALUES (3,'Navy');
INSERT INTO MilitaryBranch VALUES (4,'Air Force');
INSERT INTO MilitaryBranch VALUES (5,'Coast Guard');

INSERT INTO RaceType VALUES (0,'Hispanic/Latino Asian');
INSERT INTO RaceType VALUES (1,'Asian');
INSERT INTO RaceType VALUES (2,'Black/African American');
INSERT INTO RaceType VALUES (3,'Native Hawaiian/Pacific Islander');
INSERT INTO RaceType VALUES (4,'Native American/Native Indian');
INSERT INTO RaceType VALUES (5,'White/Middle Eastern');

INSERT INTO TestType VALUES (0,'CBEST');
INSERT INTO TestType VALUES (1,'GMAT');
INSERT INTO TestType VALUES (2,'GRE General');
INSERT INTO TestType VALUES (3,'IELTS');
INSERT INTO TestType VALUES (4,'MAT');
INSERT INTO TestType VALUES (5,'PRAXIS');
INSERT INTO TestType VALUES (6,'TOEFL');
INSERT INTO TestType VALUES (7,'WEST-B');
INSERT INTO TestType VALUES (8,'WEST-E');

INSERT INTO Term(TERM_ID, TERM_QUARTER, TERM_YEAR)
VALUES
(1, 'Fall', 2016),
(2, 'Summer', 2017),
(3, 'Fall', 2017);

INSERT INTO State(STATE_DESCRIPTION)
VALUES
(''),
('AK'),
('AL'),
('AZ'),
('AR'),
('CA'),
('CO'),
('CT'),
('DE'),
('DC'),
('FL'),
('GA'),
('HI'),
('ID'),
('IL'),
('IN'),
('IA'),
('KS'),
('KY'),
('LA'),
('ME'),
('MD'),
('MA'),
('MI'),
('MN'),
('MS'),
('MO'),
('MT'),
('NB'),
('NV'),
('NH'),
('NJ'),
('NM'),
('NY'),
('NC'),
('ND'),
('OH'),
('OK'),
('OR'),
('PA'),
('PR'),
('RI'),
('SC'),
('SD'),
('TN'),
('TX'),
('UT'),
('VT'),
('VA'),
('VI'),
('WA'),
('WV'),
('WI'),
('WY');


DELIMITER |
CREATE FUNCTION CreateOrUpdateApplicant(USER_ID INT, VETERAN_STATUS_ID INT, MINITARY_BRANCH_ID INT, FNAME VARCHAR(15), LNAME VARCHAR(15), PREFERRED_NAME VARCHAR(15), DATE_OF_BIRTH VARCHAR(15),
STREET_ADDRESS VARCHAR(15), CITY VARCHAR(15), STATE_ID INT, COUNTRY VARCHAR(15), ZIPCODE VARCHAR(15), PHONE_NUMBER INT,
US_CITIZEN VARCHAR(3), EN_NATIVE VARCHAR(3), GENDER VARCHAR(6), HISPANIC VARCHAR(3))
RETURNS INT
BEGIN
	DECLARE APPID INT;
	SELECT APPLICANT_ID INTO APPID FROM PersonalInformation
    WHERE APPLICANT_USER_ID = USER_ID;
    IF APPID IS NULL THEN
		INSERT INTO PersonalInformation
		(APPLICANT_USER_ID,
		APPLICANT_VETERAN_STATUS_ID,
		APPLICANT_MILITARY_BRANCH_ID,
		APPLICANT_FNAME,
		APPLICANT_LNAME,
		APPLICANT_PREFERRED_NAME,
		APPLICANT_DATE_OF_BIRTH,
		APPLICANT_STREET_ADDRESS,
		APPLICANT_CITY,
		APPLICANT_STATE_ID,
		APPLICANT_COUNTRY,
		APPLICANT_ZIPCODE,
		APPLICANT_PHONE_NUMBER,
		APPLICANT_US_CITIZEN,
		APPLICANT_EN_NATIVE,
		APPLICANT_GENDER,
		APPLICANT_HISPANIC_OR_LATINO)
		VALUES(
		USER_ID,
		VETERAN_STATUS_ID,
		MINITARY_BRANCH_ID,
		FNAME,
		LNAME,
		PREFERRED_NAME,
		STR_TO_DATE(DATE_OF_BIRTH, '%Y-%m-%d'),
		STREET_ADDRESS,
		CITY,
		STATE_ID,
		COUNTRY,
		ZIPCODE,
		PHONE_NUMBER,
		US_CITIZEN,
		EN_NATIVE,
		GENDER,
		HISPANIC
		);
		SELECT APPLICANT_ID INTO APPID FROM PersonalInformation
		WHERE APPLICANT_USER_ID = USER_ID;
	ELSE
		UPDATE PersonalInformation
        SET
		APPLICANT_VETERAN_STATUS_ID = VETERAN_STATUS_ID,
		APPLICANT_MILITARY_BRANCH_ID = MINITARY_BRANCH_ID,
		APPLICANT_FNAME = FNAME,
		APPLICANT_LNAME = LNAME,
		APPLICANT_PREFERRED_NAME = PREFERRED_NAME,
		APPLICANT_DATE_OF_BIRTH = STR_TO_DATE(DATE_OF_BIRTH, '%Y-%m-%d'),
		APPLICANT_STREET_ADDRESS = STREET_ADDRESS,
		APPLICANT_CITY = CITY,
		APPLICANT_STATE_ID = STATE_ID,
		APPLICANT_COUNTRY = COUNTRY,
		APPLICANT_ZIPCODE = ZIPCODE,
		APPLICANT_PHONE_NUMBER = PHONE_NUMBER,
		APPLICANT_US_CITIZEN = US_CITIZEN,
		APPLICANT_EN_NATIVE = EN_NATIVE,
		APPLICANT_GENDER = GENDER,
		APPLICANT_HISPANIC_OR_LATINO = HISPANIC
        WHERE APPLICANT_ID = APPID;
	END IF;
	RETURN APPID;
END
|

CREATE FUNCTION CreateApplication(APP_ID INT, STU_TYPE_ID INT, COL_ID INT,
					DEGREE_ID INT, MAJOR_ID INT, TER_ID INT, FIN_AID VARCHAR(3),
					EMP_ASSI VARCHAR(3), MUL_PRO VARCHAR(3), FEL_MIS VARCHAR(3),
					INS_IMC VARCHAR(3))
RETURNS INT
BEGIN
	DECLARE ID INT;
	INSERT INTO Application(
	APPLICANT_ID,
	STUDENT_TYPE_ID,
	COLLEGE_ID,
	DEGREE_OF_APPLICATION_ID,
	MAJOR_OF_APPLICATION_ID,
	TERM_ID,
	APPLICATION_FINITIAL_AID,
	APPLICATION_EMPLOYEE_ASSISTANCE,
	APPLICATION_MULTIPLE_PROGRAM,
	APPLICATION_FELONY_MISDEMEANOR,
	APPLICATION_INSTITUTION_IMCOMPLETE
	) VALUES (
	APP_ID,
	STU_TYPE_ID,
	COL_ID,
	DEGREE_ID,
	MAJOR_ID,
	TER_ID,
	FIN_AID,
	EMP_ASSI,
	MUL_PRO,
	FEL_MIS,
	INS_IMC
	);
	SELECT MAX(APPLICATION_ID) INTO ID
	FROM Application
	WHERE APPLICANT_ID = APP_ID;
	RETURN ID;
END
|
DELIMITER ;